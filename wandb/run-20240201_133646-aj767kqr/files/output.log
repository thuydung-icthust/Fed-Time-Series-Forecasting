INFO logger 2024-02-01 13:36:50,726 | data_utils.py:383 | Observations info in ElBorn
INFO logger 2024-02-01 13:36:50,726 | data_utils.py:384 | 	Total number of samples:  4192
INFO logger 2024-02-01 13:36:50,726 | data_utils.py:385 | 	Number of samples for training: 3354
INFO logger 2024-02-01 13:36:50,726 | data_utils.py:386 | 	Number of samples for validation:  838
INFO logger 2024-02-01 13:36:50,728 | data_utils.py:383 | Observations info in LesCorts
INFO logger 2024-02-01 13:36:50,728 | data_utils.py:384 | 	Total number of samples:  6892
INFO logger 2024-02-01 13:36:50,728 | data_utils.py:385 | 	Number of samples for training: 5514
INFO logger 2024-02-01 13:36:50,728 | data_utils.py:386 | 	Number of samples for validation:  1378
INFO logger 2024-02-01 13:36:50,730 | data_utils.py:383 | Observations info in PobleSec
INFO logger 2024-02-01 13:36:50,730 | data_utils.py:384 | 	Total number of samples:  15927
INFO logger 2024-02-01 13:36:50,730 | data_utils.py:385 | 	Number of samples for training: 12742
INFO logger 2024-02-01 13:36:50,730 | data_utils.py:386 | 	Number of samples for validation:  3185
INFO logger 2024-02-01 13:36:50,731 | data_utils.py:389 | Observations info using all data
INFO logger 2024-02-01 13:36:50,731 | data_utils.py:390 | 	Total number of samples:  27011
INFO logger 2024-02-01 13:36:50,731 | data_utils.py:391 | 	Number of samples for training: 21610
INFO logger 2024-02-01 13:36:50,731 | data_utils.py:392 | 	Number of samples for validation:  5401
INFO logger 2024-02-01 13:36:50,731 | data_utils.py:118 | Using Flooring and Capping and with params: {'ElBorn': (10, 90), 'LesCorts': (10, 90), 'PobleSec': (5, 95)}
Clients participating training are: dict_keys(['ElBorn', 'LesCorts', 'PobleSec'])
Python 3.11.5 (main, Sep 11 2023, 13:54:46) [GCC 11.2.0]
Type 'copyright', 'credits' or 'license' for more information
IPython 8.17.2 -- An enhanced Interactive Python. Type '?' for help.
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
File ~/code/Fed-Time-Series-Forecasting/main.py:122
    119     args.outlier_columns = outlier_columns
    120     args.outlier_kwargs = outlier_kwargs
--> 122 main(args)
File ~/code/Fed-Time-Series-Forecasting/main.py:46, in main(args)
     41 # federated local params
     42 local_train_params = {"epochs": args.epochs, "optimizer": args.optimizer, "lr": args.lr,
     43                     "criterion": args.criterion, "early_stopping": args.local_early_stopping,
     44                     "patience": args.local_patience, "device": args.device
     45                     }
---> 46 global_model, history = fit(
     47                             model,
     48                             client_X_train,
     49                             client_y_train,
     50                             client_X_val,
     51                             client_y_val,
     52                             local_train_params=local_train_params,
     53                             args = args,
     54                             wandb_ins=wandb_instance)
     56 validation_dict = inference(
     57                 global_model,
     58                 client_X_train,
   (...)
     64                 y_scalers,
     65                 args)
File ~/code/Fed-Time-Series-Forecasting/fl_trainer.py:44, in fit(model, X_train, y_train, X_val, y_val, exogenous_data_train, exogenous_data_val, idxs, log_per, client_creation_fn, local_train_params, aggregation_params, use_carbontracker, args, wandb_ins)
     41 all_client_keys = set(all_client_keys)
     42 # import IPython
     43 # IPython.embed()
---> 44 global_val_loaders = [to_torch_dataset(
     45     X_val[domain_name], y_val[domain_name],
     46     num_lags=args.num_lags,
     47     exogenous_data=None,
     48     indices=idxs,
     49     batch_size=args.batch_size,
     50     shuffle=False) for domain_name in all_client_keys]
     54 # get data per client
     55 for client in X_train:
File ~/code/Fed-Time-Series-Forecasting/fl_trainer.py:47, in <listcomp>(.0)
     41 all_client_keys = set(all_client_keys)
     42 # import IPython
     43 # IPython.embed()
     44 global_val_loaders = [to_torch_dataset(
     45     X_val[domain_name], y_val[domain_name],
     46     num_lags=args.num_lags,
---> 47     exogenous_data=None,
     48     indices=idxs,
     49     batch_size=args.batch_size,
     50     shuffle=False) for domain_name in all_client_keys]
     54 # get data per client
     55 for client in X_train:
NameError: cannot access free variable 'tmp_exogenous_data_val' where it is not associated with a value in enclosing scope